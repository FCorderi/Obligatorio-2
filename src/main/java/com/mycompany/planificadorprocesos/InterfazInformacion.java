package com.mycompany.planificadorprocesos;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Felipe
 */
public class InterfazInformacion extends javax.swing.JFrame {

    /**
     * Creates new form IntefazInformacion
     */
    public InterfazInformacion(int quantum, Lista<Proceso> lista1, Lista<Proceso> lista2, Lista<Proceso> lista3, Lista<Proceso> lista4) {
        initComponents();
        listaP1 = lista1;
        listaP2 = lista2;
        listaP3 = lista3;
        listaP4 = lista4;
        Quantum = quantum;
        //this.getco //timer.schedule(new tarea(), 1000);
                //timer.schedule(new tarea(), 1000, 1000);
        timer.start();
    }

//    class tarea extends TimerTask{
//        public void run(){
//            loop();
//        }
//    }

    Timer timer = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {

            loop();
            // Aquí el código que queramos ejecutar.
        }
    });

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        procesoEjecucionId = new javax.swing.JTextField();
        procesoTR = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        colaEjecucion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaBloqueados = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaFinalizados = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaListos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cambiarPrioPrio = new javax.swing.JSpinner();
        cambiarPrioId = new javax.swing.JSpinner();
        bloquearProcesoId = new javax.swing.JSpinner();
        cambiarPrioridad = new javax.swing.JButton();
        bloquearProceso = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Proceso en ejecución:");

        jLabel2.setText("ID");

        jLabel3.setText("Tiempo restante");

        procesoEjecucionId.setEditable(false);
        procesoEjecucionId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procesoEjecucionIdActionPerformed(evt);
            }
        });

        procesoTR.setEditable(false);
        procesoTR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procesoTRActionPerformed(evt);
            }
        });

        jLabel4.setText("Cola en ejecución:");

        colaEjecucion.setEditable(false);
        colaEjecucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colaEjecucionActionPerformed(evt);
            }
        });

        tablaBloqueados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "T/Bloqueo", "Prioridad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaBloqueados);

        tablaFinalizados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaFinalizados);

        tablaListos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo", "Prioridad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaListos);

        jLabel5.setText("Cola de listos");

        jLabel6.setText("Cola de bloqueados");

        jLabel7.setText("Cola de finalizados");

        jLabel8.setText("Cambiar prioridad");

        jLabel9.setText("Bloquear proceso");

        jLabel10.setText("ID");

        jLabel11.setText("ID");

        jLabel12.setText("Prioridad");

        cambiarPrioPrio.setModel(new javax.swing.SpinnerNumberModel(1, 1, 99, 1));

        cambiarPrioId.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        bloquearProcesoId.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        cambiarPrioridad.setText("Cambiar");
        cambiarPrioridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarPrioridadActionPerformed(evt);
            }
        });

        bloquearProceso.setText("Bloquear");
        bloquearProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloquearProcesoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(80, 80, 80)
                                        .addComponent(jLabel3)
                                        .addGap(24, 24, 24)))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(43, 43, 43)
                                .addComponent(procesoEjecucionId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(procesoTR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(colaEjecucion, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bloquearProcesoId)
                            .addComponent(cambiarPrioId))
                        .addGap(18, 18, 18)
                        .addComponent(cambiarPrioPrio, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(272, 272, 272))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel10)
                        .addGap(80, 80, 80)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jLabel11)))
                .addContainerGap(297, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(96, 96, 96)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cambiarPrioridad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bloquearProceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(procesoEjecucionId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(procesoTR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(colaEjecucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cambiarPrioPrio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cambiarPrioId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cambiarPrioridad))
                .addGap(8, 8, 8)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(bloquearProcesoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloquearProceso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void procesoEjecucionIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procesoEjecucionIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_procesoEjecucionIdActionPerformed

    private void procesoTRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procesoTRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_procesoTRActionPerformed

    private void colaEjecucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colaEjecucionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colaEjecucionActionPerformed

    private void cambiarPrioridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarPrioridadActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cambiarPrioridadActionPerformed

    private void bloquearProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloquearProcesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloquearProcesoActionPerformed

    public void loop() {
        Planificadores planificador = new Planificadores(Quantum, listaP1, listaP2, listaP3, listaP4, procesosFinalizados, procesosBloqueados);
        colaEjecucion.setText("Cola 1 (procesos del sistema)");
        while ((!listaP1.esVacia()) || (!procesosBloqueados.esVacia())) {

            System.out.println("INICIO");
            Proceso p = planificador.evenDriven(listaP1);
            if (p != null) {
                procesoEjecucionId.setText(String.valueOf(p.ID));
                procesoTR.setText(String.valueOf(p.Duracion));
            }

            Nodo<Proceso> actual = listaP1.getPrimero();
            DefaultTableModel dt1 = (DefaultTableModel) tablaListos.getModel();
            int filas = dt1.getRowCount();
            for (int i = filas - 1; i >= 0; i--) {
                dt1.removeRow(i);
            }
            if (actual != null) {
                String[] datos = {
                    String.valueOf(actual.getDato().ID),
                    actual.getDato().Tipo,
                    String.valueOf(actual.getDato().Prioridad),};
                dt1.addRow(datos);
                while (actual.getSiguiente() != null) {
                    System.out.println("LISTOS");
                    actual = actual.getSiguiente();
                    datos[0] = String.valueOf(actual.getDato().ID);
                    datos[1] = actual.getDato().Tipo;
                    datos[2] = String.valueOf(actual.getDato().Prioridad);
                    dt1.addRow(datos);
                }
            }

            actual = procesosBloqueados.getPrimero();
            System.out.println(procesosBloqueados.imprimir());
            if (actual != null) {
                DefaultTableModel dt2 = (DefaultTableModel) tablaBloqueados.getModel();
                int filasb = dt2.getRowCount();
                for (int i = filasb - 1; i >= 0; i--) {
                    dt2.removeRow(i);
                }
                String[] datos1 = {
                    String.valueOf(actual.getDato().ID),
                    String.valueOf(actual.getDato().DuracionES),
                    String.valueOf(actual.getDato().Prioridad),};
                dt2.addRow(datos1);
                while (actual.getSiguiente() != null) {
                    System.out.println("BLOQUEADOS");
                    actual = actual.getSiguiente();
                    datos1[0] = String.valueOf(actual.getDato().ID);
                    datos1[1] = String.valueOf(actual.getDato().DuracionES);
                    datos1[2] = String.valueOf(actual.getDato().Prioridad);
                    dt2.addRow(datos1);
                }
            }

            actual = procesosFinalizados.getPrimero();
            if (actual != null) {
                DefaultTableModel dt3 = (DefaultTableModel) tablaFinalizados.getModel();
                int filasf = dt3.getRowCount();
                for (int i = filasf - 1; i >= 0; i--) {
                    dt3.removeRow(i);
                }
                String[] datos2 = {
                    String.valueOf(actual.getDato().ID),
                    actual.getDato().Tipo,};
                dt3.addRow(datos2);
                while (actual.getSiguiente() != null) {
                    System.out.println("FINALIZADOS");
                    actual = actual.getSiguiente();
                    datos2[0] = String.valueOf(actual.getDato().ID);
                    datos2[1] = String.valueOf(actual.getDato().Tipo);
                    dt3.addRow(datos2);
                }

            }

            /*
            DefaultTableModel dt = (DefaultTableModel) tablaListos.getModel();
            String[] datos = {
                String.valueOf(p.ID),
                p.Tipo,
                String.valueOf(p.Duracion),
                String.valueOf(p.TEntreES),
                String.valueOf(p.DuracionES),
                String.valueOf(p.Prioridad),};
            dt.addRow(datos);
             */
//            try {
//                Thread.sleep(10000);
//                System.out.println("SLEEP");
//            } catch (Exception e) {
//            }
        }
        //       }
        /*
        while ((!listaP2.esVacia()) || (!procesosBloqueados.esVacia())) {
            planificador.roundRobin(listaP2, 2);
            try {
                Thread.sleep(1000);
            } catch (Exception e) {
            }
        }
        while ((!listaP3.esVacia()) || (!procesosBloqueados.esVacia())) {
            planificador.roundRobin(listaP3, 3);
            try {
                Thread.sleep(1000);
            } catch (Exception e) {
            }
        }
        while ((!listaP4.esVacia()) || (!procesosBloqueados.esVacia())) {
            planificador.firstComeFirstServed(listaP4);
            try {
                Thread.sleep(1000);
            } catch (Exception e) {
            }
        }
         */
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazInformacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazInformacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazInformacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazInformacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }
    Lista<Proceso> listaP1;
    Lista<Proceso> listaP2;
    Lista<Proceso> listaP3;
    Lista<Proceso> listaP4;
    Lista<Proceso> procesosFinalizados = new Lista();
    Lista<Proceso> procesosBloqueados = new Lista();
    int Quantum;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bloquearProceso;
    private javax.swing.JSpinner bloquearProcesoId;
    private javax.swing.JSpinner cambiarPrioId;
    private javax.swing.JSpinner cambiarPrioPrio;
    private javax.swing.JButton cambiarPrioridad;
    private javax.swing.JTextField colaEjecucion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField procesoEjecucionId;
    private javax.swing.JTextField procesoTR;
    private javax.swing.JTable tablaBloqueados;
    private javax.swing.JTable tablaFinalizados;
    private javax.swing.JTable tablaListos;
    // End of variables declaration//GEN-END:variables
}
